name: Publish Demos to GH Pages

on:
  workflow_dispatch:

jobs:
  build-devextreme:
    runs-on: ubuntu-latest
    name: Build DevExtreme
    timeout-minutes: 20

    steps:
      - name: Get sources
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Restore npm cache
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-modules

      - name: DevExtreme - Install packages
        run: npm install --no-audit --no-fund

      - name: DevExtreme - Build-all
        env:
          BUILD_TEST_INTERNAL_PACKAGE: true
        run: npm run all:build

      - name: Move packages
        run: |
          mv ./packages/devextreme/artifacts/npm/devextreme/*.tgz ./devextreme-installer.tgz
          mv ./packages/devextreme/artifacts/npm/devextreme-dist/*.tgz ./devextreme-dist-installer.tgz
          mv ./packages/devextreme-angular/npm/dist/*.tgz ./devextreme-angular-installer.tgz
          mv ./packages/devextreme-react/npm/*.tgz ./devextreme-react-installer.tgz
          mv ./packages/devextreme-vue/npm/*.tgz ./devextreme-vue-installer.tgz

      - name: Copy build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: devextreme-sources
          path: |
            devextreme-installer.tgz
            devextreme-dist-installer.tgz
            devextreme-angular-installer.tgz
            devextreme-react-installer.tgz
            devextreme-vue-installer.tgz
          retention-days: 1
  
  publish-ES:
    runs-on: ubuntu-latest
    needs: [build-devextreme]
    steps:
      - name: Get sources
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install

      - name: Download devextreme sources
        uses: actions/download-artifact@v4
        with:
          name: devextreme-sources

        # NOTE: workaround due to wrappers are incorrect NPM packages now
      - name: Install wrappers packages
        run: |
          rm -rf node_modules/devextreme node_modules/devextreme-dist node_modules/devextreme-angular node_modules/devextreme-react node_modules/devextreme-vue
          mkdir node_modules/devextreme node_modules/devextreme-dist node_modules/devextreme-angular node_modules/devextreme-react node_modules/devextreme-vue
          tar -xzf devextreme-installer.tgz -C node_modules/devextreme
          mv node_modules/devextreme/package/* node_modules/devextreme
          tar -xzf devextreme-dist-installer.tgz -C node_modules/devextreme-dist
          mv node_modules/devextreme-dist/package/* node_modules/devextreme-dist
          tar -xzf devextreme-angular-installer.tgz -C node_modules/devextreme-angular
          mv node_modules/devextreme-angular/package/* node_modules/devextreme-angular
          tar -xzf devextreme-react-installer.tgz -C node_modules/devextreme-react
          mv node_modules/devextreme-react/package/* node_modules/devextreme-react
          tar -xzf devextreme-vue-installer.tgz -C node_modules/devextreme-vue
          mv node_modules/devextreme-vue/package/* node_modules/devextreme-vue

      - name: Prepare configs
        working-directory: apps/demos
        run: npm run prepare-js
      
      - name: Copy metadata
        working-directory: apps/demos
        run: npm run make-demos-bundle -- --copy-metadata

      - name: Prepare React demo bundles
        working-directory: apps/demos
        run: npm run make-demos-bundle -- --framework React

      - name: Prepare Vue demo bundles
        working-directory: apps/demos
        run: npm run make-demos-bundle -- --framework Vue

      - name: Save publish-demos directory for ES as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: publish-demos
          path: ./apps/demos/publish-demos

  publish-angular:
    runs-on: ubuntu-latest
    needs: [build-devextreme]
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Check generated demos (1/10)
            command: CONSTEL=1/10 npm run make-demos-bundle -- --framework Angular
          - name: Check generated demos (2/10)
            command: CONSTEL=2/10 npm run make-demos-bundle -- --framework Angular
          - name: Check generated demos (3/10)
            command: CONSTEL=3/10 npm run make-demos-bundle -- --framework Angular
          - name: Check generated demos (4/10)
            command: CONSTEL=4/10 npm run make-demos-bundle -- --framework Angular
          - name: Check generated demos (5/10)
            command: CONSTEL=5/10 npm run make-demos-bundle -- --framework Angular
          - name: Check generated demos (6/10)
            command: CONSTEL=6/10 npm run make-demos-bundle -- --framework Angular
          - name: Check generated demos (7/10)
            command: CONSTEL=7/10 npm run make-demos-bundle -- --framework Angular
          - name: Check generated demos (8/10)
            command: CONSTEL=8/10 npm run make-demos-bundle -- --framework Angular
          - name: Check generated demos (9/10)
            command: CONSTEL=9/10 npm run make-demos-bundle -- --framework Angular
          - name: Check generated demos (10/10)
            command: CONSTEL=10/10 npm run make-demos-bundle -- --framework Angular
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js v18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Download devextreme sources
        uses: actions/download-artifact@v4
        with:
          name: devextreme-sources

        # NOTE: workaround due to wrappers are incorrect NPM packages now
      - name: Install wrappers packages
        run: |
          rm -rf node_modules/devextreme node_modules/devextreme-dist node_modules/devextreme-angular node_modules/devextreme-react node_modules/devextreme-vue
          mkdir node_modules/devextreme node_modules/devextreme-dist node_modules/devextreme-angular node_modules/devextreme-react node_modules/devextreme-vue
          tar -xzf devextreme-installer.tgz -C node_modules/devextreme
          mv node_modules/devextreme/package/* node_modules/devextreme
          tar -xzf devextreme-dist-installer.tgz -C node_modules/devextreme-dist
          mv node_modules/devextreme-dist/package/* node_modules/devextreme-dist
          tar -xzf devextreme-angular-installer.tgz -C node_modules/devextreme-angular
          mv node_modules/devextreme-angular/package/* node_modules/devextreme-angular
          tar -xzf devextreme-react-installer.tgz -C node_modules/devextreme-react
          mv node_modules/devextreme-react/package/* node_modules/devextreme-react
          tar -xzf devextreme-vue-installer.tgz -C node_modules/devextreme-vue
          mv node_modules/devextreme-vue/package/* node_modules/devextreme-vue

      - name: Prepare configs
        working-directory: apps/demos
        run: npm run prepare-js

      - name: Copy metadata
        working-directory: apps/demos
        run: npm run make-demos-bundle -- --copy-metadata

      - name: Update angular.json
        working-directory: apps/demos
        run: npm run update-angular-json

      - name: Create angular entryPoints to compile faster
        working-directory: apps/demos
        run: npm run launch-ngcc

      - name: Prepare Angular demo bundles
        working-directory: apps/demos
        run: |
          ${{ matrix.command }}

      - name: Angular post process index.html
        working-directory: apps/demos
        run: npm run post-modify-angular
      
      - name: Save publish-demos directory for Angular as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: publish-demos
          path: ./apps/demos/publish-demos

  deploy:
    runs-on: ubuntu-latest
    needs: [build-devextreme, publish-ES, publish-angular]
    steps: 
      - name: Download publish-demos artifact
        uses: actions/download-artifact@v3
        with:
          name: publish-demos
          path: ./apps/demos/publish-demos
      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./apps/demos/publish-demos