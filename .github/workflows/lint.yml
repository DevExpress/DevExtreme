name: Lint

concurrency:
  group: wf-${{github.event.pull_request.number || github.sha}}-${{github.workflow}}
  cancel-in-progress: true

on:
  pull_request:
  push:
    branches: [24_1]

jobs:
  Renovation:
    runs-on: devextreme-shr2
    timeout-minutes: 60
    steps:
    - name: Get sources
      uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Restore npm cache
      uses: actions/cache@v4
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-modules

    - name: Run npm install
      run: npm install --no-audit --no-fund

    - name: Compile renovation
      working-directory: ./packages/devextreme
      run: |
        npm run compile:r
# Remove package install after upgrade to TypeScript >= 4.6

    - name: Lint renovation
      working-directory: ./packages/devextreme
      run: npm run lint-renovation

  TS:
    runs-on: devextreme-shr2
    timeout-minutes: 60
    steps:
    - name: Get sources
      uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Restore npm cache
      uses: actions/cache@v4
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-modules

    - name: Run npm install
      run: npm install --no-audit --no-fund

    - name: Run npm install TS testing
      working-directory: ./packages/devextreme
      run: |
        pushd testing/typescript
        npm install --no-audit --no-fund
        popd

    - name: Build
      working-directory: ./packages/devextreme
      run: npm run build

    - name: Lint TS
      working-directory: ./packages/devextreme
      env:
        DEBUG: eslint:cli-engine
      run: npm run lint-ts

    - name: Lint .d.ts
      working-directory: ./packages/devextreme
      env:
        DEBUG: eslint:cli-engine
      run: npm run lint-dts

  JS:
    runs-on: devextreme-shr2
    timeout-minutes: 60
    steps:
    - name: Get sources
      uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Restore npm cache
      uses: actions/cache@v4
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-modules

    - name: Run npm install
      run: npm install --no-audit --no-fund

    - name: Build
      working-directory: ./packages/devextreme
      run: npm run build

    - name: Lint JS
      working-directory: ./packages/devextreme
      env:
        DEBUG: eslint:cli-engine
      run: npm run lint-js

  texts:
    runs-on: devextreme-shr2
    timeout-minutes: 60
    steps:
    - name: Get sources
      uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Restore npm cache
      uses: actions/cache@v4
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-modules

    - name: Run npm install
      run: npm install --no-audit --no-fund

    - name: Check texts
      working-directory: ./packages/devextreme
      run: npm run lint-texts

  CSS:
    runs-on: devextreme-shr2
    timeout-minutes: 60
    steps:
    - name: Get sources
      uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Restore npm cache
      uses: actions/cache@v4
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-modules

    - name: Run npm install
      run: npm install --no-audit --no-fund

    - name: Lint CSS
      working-directory: ./packages/devextreme
      run: npm run lint-css

  package_lock:
    runs-on: devextreme-shr2
    timeout-minutes: 10
    steps:
    - name: Get sources
      uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Update package-lock
      run: |
        node -v
        npm -v
        npm install --no-audit --no-fund --ignore-scripts

    - name: Upload package-lock
      uses: actions/upload-artifact@v3
      with:
        name: package-lock.json
        path: ./package-lock.json
        retention-days: 1  

    - name: Check package-lock
      run: git diff --exit-code package-lock.json

  component_exports:
    runs-on: devextreme-shr2
    timeout-minutes: 10
    steps:
    - name: Get sources
      uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Restore npm cache
      uses: actions/cache@v4
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-modules

    - name: Install dependencies
      run: |
        node -v
        npm -v
        npm install --no-audit --no-fund --ignore-scripts

    - name: Check generated component reexports
      working-directory: ./packages/devextreme
      run: |
        npm run update-ts-reexports

        git add . -N

        if git diff --exit-code ; then
          echo "Generated component reexports are up-to-date"
        else
            echo "Generated component reexports are outdated. Execute 'npm run update-ts-reexports' and commit changes."
            exit 1
        fi

  wrappers:
    runs-on: devextreme-shr2
    timeout-minutes: 10

    steps:
    - name: Get sources
      uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Restore npm cache
      uses: actions/cache@v4
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-modules

    - name: Install dependencies
      run: npm install --no-audit --no-fund

    - name: Lint devextreme-angular
      working-directory: ./packages/devextreme-angular
      run: npm run lint

    - name: Lint devextreme-react
      working-directory: ./packages/devextreme-react
      run: npm run lint

    - name: Lint devextreme-vue
      working-directory: ./packages/devextreme-vue
      run: npm run lint

  notify:
    runs-on: devextreme-shr2
    name: Send notifications
    needs: [Renovation, TS, JS, CSS, texts, package_lock, component_exports]
    if: github.event_name != 'pull_request' && contains(needs.*.result, 'failure')

    steps:
      - uses: actions/checkout@v4
      - uses: DevExpress/github-actions/send-teams-notification@main
        with:
          hook_url: ${{secrets.TEAMS_ALERT}}
          bearer_token: ${{secrets.GITHUB_TOKEN}}
          specific_repo: DevExpress/DevExtreme
