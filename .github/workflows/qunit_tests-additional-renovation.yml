name: Additional QUnit

concurrency:
  group: wf-${{github.event.pull_request.number || github.sha}}-${{github.workflow}}
  cancel-in-progress: true

on:
  pull_request:
  push:
    branches: [23_1]

jobs:
  build:
    runs-on: devextreme-shr2
    name: Build
    timeout-minutes: 15

    steps:
      - name: Get sources
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '15'

      - name: Restore npm cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-modules

      - name: Run npm install
        run: npm install --no-audit --no-fund

      - name: Build
        env:
          DEVEXTREME_TEST_CI: "true"
          DOTNET_CLI_TELEMETRY_OPTOUT: "true"
          DOTNET_SKIP_FIRST_TIME_EXPERIENCE: "true"
        run: npm run build:dev

      - name: Zip artifacts
        run: |
          7z a -tzip -mx3 -mmt2 artifacts.zip artifacts scss/bundles testing/tests/Renovation/widgets.json

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: devextreme-artifacts
          path: artifacts.zip
          retention-days: 1

  qunit-tests-timezones:
    needs: build
    runs-on: devextreme-shr2
    name: ${{ matrix.constel }}-${{ matrix.timezone }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        constel: [ 'misc', 'ui.editors', 'ui.grid', 'ui.scheduler' ]
        timezone: [ 'PST8PDT', 'Japan', 'Australia/ACT', 'Europe/London' ]
        include:
          - useCsp: true

    steps:
      - name: Get sources
        uses: actions/checkout@v3

      - name: Run QUnit tests
        uses: ./.github/actions/run-qunit-tests
        with:
          name: ${{ matrix.constel }}-${{ matrix.timezone }}
          constel: ${{ matrix.constel }}
          browser: 'chrome'
          timezone: ${{ matrix.timezone }}
          headless: 'true'
          useJQuery: 'false'
          useCsp: ${{ matrix.useCsp == false && 'false' || 'true' }}

  qunit-tests-performance:
    needs: build
    runs-on: devextreme-shr2
    name: Performance
    timeout-minutes: 30
    steps:
      - name: Get sources
        uses: actions/checkout@v3

      - name: Run QUnit tests
        uses: ./.github/actions/run-qunit-tests
        with:
          name: 'Performance'
          browser: 'chrome'
          isPerformance: 'true'
          useJQuery: 'true'
          headless: 'false'
          useCsp: 'false'

  qunit-tests-mobile-and-shadow-dom:
    needs: build
    runs-on: devextreme-shr2
    name: ${{ matrix.constel }}-${{ matrix.userAgent }}${{ matrix.useShadowDom == true && 'shadowdom' || '' }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        constel: [
          'ui',
          'ui.widgets(1/3)',
          'ui.widgets(2/3)',
          'ui.widgets(3/3)',
          'ui.editors',
          'ui.htmlEditor',
          'ui.grid',
          'ui.scheduler',
          'viz'
        ]
        userAgent: [ '', 'ios10', 'android6' ]
        include:
          - userAgent: ''
            useShadowDom: true
          - headless: false
          - useCsp: true
          - constel: 'ui'
            headless: true
          - constel: 'viz'
            headless: true
          - userAgent: 'android6'
            useJQuery: true
          - constel: 'ui.widgets(1/3)'
            useCsp: false
          - constel: 'ui.widgets(2/3)'
            useCsp: false
          - constel: 'ui.htmlEditor'
            useCsp: false
        exclude:
          - userAgent: ''
            constel: 'ui'
          - userAgent: ''
            constel: 'ui.scheduler'
          - userAgent: ''
            constel: 'viz'

    steps:
      - name: Get sources
        uses: actions/checkout@v3

      - name: Run QUnit tests
        uses: ./.github/actions/run-qunit-tests
        with:
          name: ${{ matrix.constel }}-${{ matrix.userAgent }}${{ matrix.useShadowDom == true && 'shadowdom' || '' }}
          constel: ${{ matrix.constel }}
          browser: 'chrome'
          useJQuery: ${{ matrix.useJquery || 'false' }}
          userAgent: ${{ matrix.userAgent }}
          useShadowDom: ${{ matrix.useShadowDom }}
          headless: ${{ matrix.headless }}
          useCsp: ${{ matrix.useCsp == false && 'false' || 'true' }}

  qunit-tests-firefox:
    needs: build
    runs-on: devextreme-shr2
    name: ${{ matrix.constel }}-firefox
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        constel: [
          'export',
          'misc',
          'ui',
          'ui.editors',
          'ui.htmlEditor',
          'ui.grid(1/2)',
          'ui.grid(2/2)',
          'ui.scheduler(1/2)',
          'ui.scheduler(2/2)',
          'viz',
          'renovation'
        ]
        include:
          - useCsp: true
          - constel: 'export'
            useCsp: false
          - constel: 'ui.htmlEditor'
            useCsp: false

    steps:
      - name: Get sources
        uses: actions/checkout@v3

      - name: Run QUnit tests
        uses: ./.github/actions/run-qunit-tests
        with:
          name: ${{ matrix.constel }}-firefox
          constel: ${{ matrix.constel }}
          browser: 'firefox'
          useJQuery: 'true'
          headless: 'true'
          useCsp: ${{ matrix.useCsp == false && 'false' || 'true' }}

  notify:
    runs-on: devextreme-shr2
    name: Send notifications
    needs: [
      build,
      qunit-tests-timezones,
      qunit-tests-performance,
      qunit-tests-mobile-and-shadow-dom,
      qunit-tests-firefox
    ]
    if: always() && contains(needs.*.result, 'failure')

    steps:
      - uses: actions/checkout@v3
      - uses: DevExpress/github-actions/send-teams-notification@main
        with:
          hook_url: ${{secrets.TEAMS_ALERT}}
          bearer_token: ${{secrets.GITHUB_TOKEN}}
          specific_repo: DevExpress/DevExtreme
          specific_branch: 23_1
