name: Styles tests

concurrency:
  group: wf-${{github.event.pull_request.number || github.sha}}-${{github.workflow}}
  cancel-in-progress: true

on:
  pull_request:
  push:
    branches: [23_2]

env:
  NX_SKIP_NX_CACHE: ${{ (github.event_name != 'pull_request' || contains( github.event.pull_request.labels.*.name, 'skip-cache')) && 'true' || 'false' }}

jobs:
  Tests:
    runs-on: devextreme-shr2
    timeout-minutes: 60
    steps:
    - name: Get sources
      uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Restore npm cache
      uses: actions/cache@v3
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-modules

    - name: Run npm install
      run: npm install --no-audit --no-fund

    - name: Build themes
      working-directory: ./packages/devextreme
      run: npm run build-themes

    - name: Fetch npm package versions
      id: npm-versions
      run: |
        package_name="devextreme"
        versions=$(npm show $package_name versions --json)
        echo "::set-output name=versions::$(echo $versions)"

    - name: Check package size
      run: |
        FOLDER_PATH="packages/devextreme/artifacts/css"
        FOLDER_SIZE=$(ls -nl "${FOLDER_PATH}" | awk '{print $5}')
        FILE_PATH="packages/devextreme/artifacts/css/dx.light.css"
        FILE_SIZE=$(ls -nl "${FILE_PATH}" | awk '{print $5}')
        echo "Folder size of ${FOLDER_PATH}: ${FOLDER_SIZE} bytes"
        echo "File size of ${FILE_PATH}: ${FILE_SIZE} bytes"

    - name: Get folder size for each version
      id: folder-sizes
      run: |
        package_name="devextreme"
        versions="${{ steps.npm-versions.outputs.versions }}"
        echo "version,date,size" > package_folder_sizes.csv
        npm install $package_name@20.1.5
        cd node_modules
        cd devextreme
        ls
        cd dist
        ls
        cd css
        folder_size=$(du -sh node_modules/$package_name/dist/css | cut -f1)
        publish_date=$(npm view $package_name@$version time.modified)
        echo "\"$version\",\"$publish_date\",\"$folder_size\"" >> package_folder_sizes.csv
        # for version in $(echo "${versions}" | jq -r '.[]'); do
        # Extract the package
        # npm install $package_name@$version
        # Measure the size of the internal folder
        # folder_size=$(du -sh node_modules/$package_name/dist/css | cut -f1)
        # publish_date=$(npm view $package_name@$version time.modified)
        # echo "\"$version\",\"$publish_date\",\"$folder_size\"" >> package_folder_sizes.csv
        # Clean up the extracted package
        # rm -rf node_modules
        done

    - name: Display sizes
      run: cat package_folder_sizes.csv

    - name: Run tests
      run: npx nx test-styles devextreme-main

  notify:
    runs-on: devextreme-shr2
    name: Send notifications
    needs: [Tests]
    if: always() && contains(needs.*.result, 'failure')

    steps:
      - uses: actions/checkout@v4
      - uses: DevExpress/github-actions/send-teams-notification@main
        with:
          hook_url: ${{secrets.TEAMS_ALERT}}
          bearer_token: ${{secrets.GITHUB_TOKEN}}
          specific_repo: DevExpress/DevExtreme
          specific_branch: 23_2
