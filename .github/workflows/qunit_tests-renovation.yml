name: QUnit tests for renovation

concurrency:
  group: wf-${{github.event.pull_request.number || github.sha}}-${{github.workflow}}
  cancel-in-progress: true

on:
  pull_request:
  push:
    branches: [24_2]

env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_TOKEN }}
  NX_SKIP_NX_CACHE: ${{ (github.event_name != 'pull_request' || contains( github.event.pull_request.labels.*.name, 'skip-cache')) && 'true' || 'false' }}

jobs:
  build:
    runs-on: devextreme-shr2
    name: Build
    timeout-minutes: 60

    steps:
    - name: Get sources
      uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - uses: pnpm/action-setup@v3
      with:
        version: 9
        run_install: false

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - uses: actions/cache@v4
      name: Setup pnpm cache
      with:
        path: |
          ${{ env.STORE_PATH }}
          .nx/cache
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store

    - name: Install dependencies
      run: |
        corepack enable
        pnpm install

    - name: Build
      working-directory: ./packages/devextreme
      env:
        DEVEXTREME_TEST_CI: "true"
        DOTNET_CLI_TELEMETRY_OPTOUT: "true"
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: "true"
        BUILD_INPROGRESS_RENOVATION: "true"
      run: pnpx nx build:dev

    - name: Zip artifacts
      working-directory: ./packages/devextreme
      run: |
        7z a -tzip -mx3 -mmt2 artifacts.zip artifacts scss/bundles testing/tests/Renovation/widgets.json

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: devextreme-artifacts
        path: packages/devextreme/artifacts.zip
        retention-days: 1

  qunit-tests:
    needs: build
    runs-on: devextreme-shr2
    name: Constel ${{ matrix.CONSTEL }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        CONSTEL: [ export, misc, ui, ui.widgets(1/2), ui.widgets(2/2), ui.editors, ui.htmlEditor, ui.grid, ui.scheduler(1/2), ui.scheduler(2/2), viz, renovation ]

    steps:
    - name: Get sources
      uses: actions/checkout@v4

    - name: Run QUnit tests
      uses: ./.github/actions/run-qunit-tests
      with:
        constel: ${{ matrix.CONSTEL }}
        useCsp: "false"

  notify:
    runs-on: devextreme-shr2
    name: Send notifications
    needs: [build, qunit-tests]
    if: github.event_name != 'pull_request' && contains(needs.*.result, 'failure')

    steps:
      - uses: actions/checkout@v4
      - uses: DevExpress/github-actions/send-teams-notification@main
        with:
          hook_url: ${{secrets.TEAMS_ALERT}}
          bearer_token: ${{secrets.GITHUB_TOKEN}}
          specific_repo: DevExpress/DevExtreme
