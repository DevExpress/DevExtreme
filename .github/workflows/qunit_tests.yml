name: QUnit tests

concurrency:
  group: wf-${{github.event.pull_request.number || github.sha}}-${{github.workflow}}
  cancel-in-progress: true

on:
  schedule:
    - cron:  '0 8 * * *'

jobs:
  build:
    runs-on: devextreme-shr2
    name: Build
    timeout-minutes: 60

    steps:
    - name: Get sources
      uses: actions/checkout@v2

    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '15'

    - name: Restore npm cache
      uses: actions/cache@v2
      with:
        path: ./node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-modules

    - name: Run npm install
      run: npm install --no-audit --no-fund

    - name: Build
      run: npm run build:dev

    - name: Zip artifacts
      run: |
        7z a -tzip -mx3 -mmt2 artifacts.zip artifacts scss/bundles testing/tests/Renovation/widgets.json

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: devextreme-artifacts
        path: artifacts.zip
        retention-days: 1

  qunit-tests:
    needs: build
    runs-on: devextreme-shr2
    name: Constel ${{ matrix.CONSTEL }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        CONSTEL: [ export, misc, ui, ui.widgets(1/2), ui.widgets(2/2), ui.editors, ui.grid, ui.scheduler(1/2), ui.scheduler(2/2), viz, renovation ]

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: devextreme-artifacts

    - name: Get sources
      uses: actions/checkout@v2

    - uses: ./.github/actions/pin-browsers

    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '15'

    - name: Restore npm cache
      uses: actions/cache@v2
      with:
        path: ./node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-modules

    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: devextreme-artifacts

    - name: Unpack artifacts
      run: 7z x artifacts.zip

    - name: Build dotnet
      run: dotnet build build/build-dotnet.sln

    - name: Run QUnit tests
      env:
        CONSTEL: ${{ matrix.CONSTEL }}
        NORENOVATION: "true"
        GITHUBACTION: "true"
        TARGET: "test"
      run: |
        chmod +x ./docker-ci.sh
        ./docker-ci.sh

  notify:
    runs-on: devextreme-shr2
    name: Send notifications
    needs: [build, qunit-tests]
    if: always() && contains(needs.*.result, 'failure')

    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/send-teams-notification
        with:
          hook_url: ${{secrets.TEAMS_ALERT}}
          run_id: ${{github.run_id}}
          bearer_token: ${{secrets.GITHUB_TOKEN}}
          specific_repo: DevExpress/DevExtreme
          specific_branch: 22_2
