@use "sass:math";
@use "sass:color";
@use "colors" as *;
@use "../colors" as *;
@use "sizes" as *;
@use "../sizes" as *;
@use "../../base/icons" as *;
@use "../common/sizes" as *;
@use "../button/sizes" as *;
@use "../common/mixins" as *;
@use "../common/sizes" as *;
@use "../../base/textEditor";
@use "../../base/textEditor/mixins" as *;

// adduse

$material-base-standard-texteditor-input-horizontal-padding: 0;
$material-texteditor-icon-container-size: $material-base-icon-size - 2px;
$material-texteditor-invalid-badge-size: $material-invalid-badge-size + 2 * $material-invalid-badge-horizontal-padding;
$material-editor-custom-button-margin: 5px;
$material-filled-texteditor-input-button-horizontal-padding: $material-filled-texteditor-input-horizontal-padding - 4px;
$material-filled-texteditor-spin-button-horizontal-padding: $material-filled-texteditor-input-horizontal-padding - 8px;

$material-editor-label-transition: transform 0.2s cubic-bezier(0, 0, 0.2, 1) 0ms, font-size 0.2s cubic-bezier(0, 0, 0.2, 1) 0ms, top 0.2s cubic-bezier(0, 0, 0.2, 1) 0ms;

@mixin dx-texteditor-icon() {
  position: absolute;
  top: 50%;
  margin-top: math.div(-$material-texteditor-icon-container-size, 2);

  @include dx-icon-sizing($material-texteditor-icon-container-size);
}

@mixin texteditor-input-padding-underlined() {
  .dx-texteditor-input {
    padding-inline-end: $material-texteditor-invalid-badge-size + $material-base-standard-texteditor-input-horizontal-padding;
  }
}

@mixin texteditor-input-padding-filled() {
  .dx-texteditor-input {
    padding-inline-end: $material-texteditor-invalid-badge-size + $material-filled-texteditor-input-horizontal-padding;
  }
}

@mixin texteditor-validation-icon-offset() {
  inset-inline-end: $material-invalid-badge-halfhorizontal-padding;
}

@mixin texteditor-validation-icon-offset-filled() {
  inset-inline-end: $material-filled-texteditor-input-button-horizontal-padding;
}

@mixin validation-icon-position() {
  &.dx-invalid,
  &.dx-valid {
    &.dx-editor-underlined {
      @include texteditor-input-padding-underlined();
    }

    &.dx-editor-filled,
    &.dx-editor-outlined {
      @include texteditor-input-padding-filled();

      .dx-texteditor-input-container {
        &::after {
          @include texteditor-validation-icon-offset-filled();
        }
      }
    }

    .dx-texteditor-input-container {
      &::after {
        @include texteditor-validation-icon-offset();
      }
    }
  }
}

@mixin pending-indicator-position() {
  &.dx-validation-pending {
    &.dx-editor-underlined {
      @include texteditor-input-padding-underlined();
    }

    &.dx-editor-filled,
    &.dx-editor-outlined {
      @include texteditor-input-padding-filled();

      .dx-texteditor-input-container {
        .dx-pending-indicator {
          @include texteditor-validation-icon-offset-filled();
        }
      }
    }

    .dx-texteditor-input-container {
      .dx-pending-indicator {
        @include texteditor-validation-icon-offset();
      }
    }
  }
}

.dx-texteditor {
  border-top-left-radius: $texteditor-input-border-radius;
  border-top-right-radius: $texteditor-input-border-radius;
  position: relative;

  @mixin dx-texteditor-borders-position() {
    left: 0;
    right: 0;
    bottom: 0;
    height: 0;
    width: 100%;
    content: '';
    position: absolute;
  }

  &::before {
    @include dx-texteditor-borders-position();

    z-index: 2;
    transform: scale(0);
  }

  &::after {
    @include dx-texteditor-borders-position();
  }


  &.dx-state-focused,
  &.dx-state-focused.dx-state-hover {
    .dx-texteditor-label {
      color: $base-accent;
      font-size: $material-texteditor-label-font-size;
    }

    &.dx-invalid {
      .dx-texteditor-label {
        color: $base-invalid-color;
      }
    }
  }

  &.dx-state-focused,
  &.dx-state-active {
    background-color: $texteditor-focused-bg;

    &::before {
      border-bottom: 2px solid $texteditor-focused-border-color;
      transform: scale(1);
      transition: transform 0.6s cubic-bezier(0.4, 0, 0.02, 1);
    }
  }

  @include validation-icon-position();
  @include pending-indicator-position();

  &.dx-editor-filled,
  &.dx-editor-outlined {
    .dx-placeholder::before,
    .dx-texteditor-input {
      padding: $material-filled-texteditor-input-padding;
    }
  }

  &.dx-editor-filled {
    background-color: $texteditor-bg;

    &::after {
      border-bottom: 1px solid $texteditor-border-color;
    }

    &.dx-state-hover {
      background-color: $texteditor-hover-bg;

      &::after {
        border-bottom-color: $texteditor-hover-border-color;
      }
    }

    &.dx-state-disabled,
    &.dx-state-readonly,
    &.dx-state-readonly.dx-state-hover {
      background-color: color.change($texteditor-bg, $alpha: 0.12);

      .dx-texteditor-input {
        color: color.change($texteditor-color, $alpha: 0.5);
      }
    }
  }

  &.dx-editor-underlined {
    background-color: transparent;

    &::after {
      border-bottom: 1px solid $texteditor-border-color;
    }

    &.dx-state-hover {
      &::after {
        border-bottom: 2px solid $texteditor-hover-border-color;
      }
    }

    .dx-texteditor-input,
    .dx-placeholder::before {
      padding: $material-standard-texteditor-input-padding;
    }

    &.dx-state-disabled,
    &.dx-state-readonly,
    &.dx-state-readonly.dx-state-hover {
      &::after {
        border-bottom-style: dotted;
        border-bottom-width: 1px;
      }
    }

    &.dx-invalid {
      &::after {
        border-bottom-color: $texteditor-invalid-faded-border-color;
      }
    }
  }

  &.dx-editor-outlined {
    background-color: transparent;
    border-radius: $texteditor-input-border-radius;
    box-shadow: inset 0 0 0 1px $texteditor-border-color;

    &::before {
      display: none;
    }

    &.dx-state-hover {
      box-shadow: inset 0 0 0 1px $texteditor-hover-border-color;
    }

    &.dx-state-disabled,
    &.dx-state-readonly {
      box-shadow: inset 0 0 0 1px color.change($texteditor-color, $alpha: 0.5);

      .dx-texteditor-input {
        color: color.change($texteditor-color, $alpha: 0.5);
      }
    }

    &.dx-state-focused {
      box-shadow: inset 0 0 0 2px $texteditor-focused-border-color;

      &.dx-invalid {
        box-shadow: inset 0 0 0 2px $texteditor-invalid-focused-border-color;
      }
    }

    &.dx-invalid {
      box-shadow: inset 0 0 0 1px $texteditor-invalid-faded-border-color;
    }
  }
}

.dx-show-clear-button {
  .dx-clear-button-area {
    width: $material-texteditor-icon-container-size;
    min-width: $material-texteditor-icon-container-size;
    right: 0;
  }

  .dx-icon-clear {
    color: $texteditor-button-clear-icon-color;
    background-color: $texteditor-button-clear-icon-color-bg;
    border-radius: 50%;

    @include dx-texteditor-icon();
    @include dx-icon-font-centered-sizing($material-texteditor-clear-icon-size);
  }

  &:not(.dx-texteditor-empty) {
    @include validation-icon-position();
    @include pending-indicator-position();
  }
}


/* B231111 */
.dx-placeholder {
  color: $texteditor-placeholder-color;
  font-size: $material-texteditor-font-size;
  line-height: normal;
}

.dx-texteditor-input {
  margin: 0;
  background-color: transparent;
  color: $texteditor-color;
  font-size: $material-texteditor-font-size;
}

.dx-invalid.dx-texteditor {
  &.dx-state-hover {
    &::after {
      border-bottom-color: $texteditor-invalid-faded-border-color;
    }
  }

  &.dx-state-focused,
  &.dx-state-active {
    &::before {
      border-bottom: 2px solid $texteditor-invalid-focused-border-color;
    }
  }

  &.dx-show-invalid-badge .dx-texteditor-input-container {
    &::after {
      @include dx-invalid-material-badge();
    }
  }
}

.dx-texteditor-label {
  position: absolute;
  font-size: $material-texteditor-label-font-size;
  color: $texteditor-label-color;
  white-space: nowrap;
  user-select: none;
  pointer-events: none;
  cursor: text;
  width: 100%;
  display: flex;
  flex-direction: row;
  top: 0;
  left: 0;

  .dx-label {
    display: flex;

    span {
      overflow: hidden;
      text-overflow: ellipsis;
      width: auto;
      max-width: 100%;
      display: block;
      margin-bottom: -1px;
    }
  }

  .dx-invalid & {
    color: $base-invalid-color;
  }
}

.dx-editor-filled {
  $label-position-top: $material-texteditor-label-top-offset;

  .dx-texteditor-label {
    .dx-label-after,
    .dx-label-before {
      display: block;
      box-sizing: border-box;
      min-width: $material-filled-texteditor-input-horizontal-padding;
    }
  }

  &.dx-texteditor-with-label,
  &.dx-texteditor-with-floating-label {
    position: relative;

    .dx-texteditor-input,
    .dx-placeholder::before,
    .dx-lookup-field {
      padding-top: $material-filled-texteditor-input-with-label-top-padding;
      padding-bottom: $material-filled-texteditor-input-with-label-bottom-padding;
    }

    .dx-texteditor-label {
      font-size: $material-texteditor-label-font-size;
      height: $material-texteditor-label-font-size;
      line-height: $material-texteditor-label-font-size;
      top: $label-position-top;
      margin-top: 0;
    }
  }

  &.dx-texteditor-with-floating-label {
    &.dx-texteditor-empty,
    &.dx-texteditor-empty.dx-state-readonly {
      .dx-placeholder {
        display: none;
      }

      .dx-texteditor-label {
        transition: $material-editor-label-transition;
        font-size: $material-texteditor-font-size;
        top: 50%;
        margin-top: math.div(-$material-texteditor-font-size, 2);
        height: $material-texteditor-font-size;
        line-height: $material-texteditor-font-size;
      }
    }

    &.dx-state-focused,
    &.dx-dropdowneditor-active {
      .dx-placeholder {
        display: block;
      }

      .dx-texteditor-label {
        font-size: $material-texteditor-label-font-size;
        height: $material-texteditor-label-font-size;
        line-height: $material-texteditor-label-font-size;
        top: $label-position-top;
        margin-top: 0;
      }
    }
  }
}

.dx-editor-outlined {
  $label-offset-y: math.div($material-texteditor-label-font-size, 2);
  $label-default-transform: translate(0, 0);

  @mixin dx-state($borderColor, $shadowOffset) {
    .dx-label {
      border-color: $borderColor;
      border-top-width: 0;
      border-bottom-width: #{$shadowOffset}px;
      padding: 0 4px;

      span {
        transform: translate(0, -$label-offset-y);
        font-size: $material-texteditor-label-font-size;
        margin-top: 0;
        top: 0;
        height: $material-texteditor-label-font-size + 1px;
        line-height: $material-texteditor-label-font-size;
      }

      &::before {
        background-color: $base-bg;
      }
    }

    .dx-label-before {
      border-color: $borderColor;
      border-width: #{$shadowOffset}px;
      border-inline-end-width: 0;
    }

    .dx-label-after {
      border-color: $borderColor;
      border-width: #{$shadowOffset}px;
      border-inline-start-width: 0;
    }
  }

  @mixin dx-state-empty($borderColor, $shadowOffset) {
    .dx-label {
      padding: 0 2px;
      border-color: $borderColor;
      border-top-width: #{$shadowOffset}px;
      border-bottom-width: #{$shadowOffset}px;

      span {
        transition: $material-editor-label-transition;
        transform: $label-default-transform;
        font-size: $material-texteditor-font-size;
        top: 50%;
        margin-top: math.div(-$material-texteditor-font-size, 2);
        height: $material-texteditor-font-size;
        line-height: $material-texteditor-font-size;
      }

      &::before {
        background-color: transparent;
      }
    }

    .dx-label-before {
      border-color: $borderColor;
      border-width: #{$shadowOffset}px;
      border-inline-end-width: 0;
    }

    .dx-label-after {
      border-color: $borderColor;
      border-width: #{$shadowOffset}px;
      border-inline-start-width: 0;
    }
  }

  .dx-texteditor-label {
    inset: 0;
  }

  .dx-label {
    padding: 0 4px;
    border-top-width: 0;
    border-bottom-width: 1px;
    border-inline-width: 0;
    border-style: solid;
    border-color: $texteditor-border-color;
    margin-left: -2px;
    margin-right: -2px;
    border-radius: 1px;
    clip-path: inset(-$material-texteditor-label-font-size 1px -1px 1px);

    span {
      position: relative;
      transform: translate(0, -$label-offset-y);
      font-size: $material-texteditor-label-font-size;
      top: 0;
      margin-top: 0;
      height: $material-texteditor-label-font-size + 1px;
      line-height: $material-texteditor-label-font-size;
    }
  }

  .dx-label-before {
    border-block-width: 1px;
    border-inline-start-width: 1px;
    border-inline-end-width: 0;
    border-style: solid;
    border-color: $texteditor-border-color;
    border-start-start-radius: $texteditor-input-border-radius;
    border-end-start-radius: $texteditor-input-border-radius;
    min-width: $material-filled-texteditor-input-horizontal-padding;
    clip-path: inset(-1px 1px -1px -1px);
  }

  .dx-label-after {
    border-block-width: 1px;
    border-inline-end-width: 1px;
    border-inline-start-width: 0;
    border-style: solid;
    border-color: $texteditor-border-color;
    flex-grow: 1;
    min-width: $material-filled-texteditor-input-horizontal-padding;
    border-start-end-radius: $texteditor-input-border-radius;
    border-end-end-radius: $texteditor-input-border-radius;
    clip-path: inset(-1px -1px -1px 1px);
  }

  &.dx-rtl,
  .dx-rtl & {
    .dx-label-before {
      clip-path: inset(-1px -1px -1px 1px);
    }

    .dx-label-after {
      clip-path: inset(-1px 1px -1px -1px);
    }
  }

  &.dx-texteditor-with-floating-label {
    &.dx-texteditor-empty {
      @include dx-state-empty($texteditor-border-color, 1);

      &.dx-state-readonly,
      &.dx-state-disabled {
        @include dx-state-empty(color.change($texteditor-color, $alpha: 0.5), 1);

        &.dx-state-focused {
          @include dx-state-empty($texteditor-focused-border-color, 2);

          &.dx-invalid {
            @include dx-state-empty($texteditor-invalid-focused-border-color, 2);
          }
        }
      }

      &.dx-invalid {
        @include dx-state-empty($texteditor-invalid-faded-border-color, 1);
      }

      &.dx-state-hover {
        @include dx-state-empty($texteditor-hover-border-color, 1);

        &.dx-dropdowneditor-active {
          @include dx-state($texteditor-hover-border-color, 1);
        }

        &.dx-invalid {
          @include dx-state-empty($texteditor-invalid-focused-border-color, 1);
        }
      }

      .dx-placeholder {
        display: none;
      }

      &.dx-state-focused,
      &.dx-dropdowneditor-active {
        .dx-placeholder {
          display: block;
        }
      }

      &.dx-state-readonly {
        .dx-placeholder {
          display: none;
        }
      }

      &.dx-dropdowneditor-active {
        @include dx-state($texteditor-border-color, 1);
      }
    }
  }

  &.dx-texteditor-with-label,
  &.dx-texteditor-with-floating-label {
    border: none;
    outline: none;
    position: relative;
    margin-top: $label-offset-y;

    &.dx-daterangebox {
      .dx-label {
        position: relative;

        &::before {
          content: '';
          width: 100%;
          position: absolute;
          height: 3px;
          top: -0.5px;
          margin-inline-start: -4px;
        }
      }
    }

    .dx-label {
      &::before {
        background-color: $base-bg;
      }
    }

    &:not(.dx-daterangebox) {
      box-shadow: none;
    }

    &.dx-state-readonly,
    &.dx-state-disabled {
      @include dx-state(color.change($texteditor-color, $alpha: 0.5), 1);
    }

    &.dx-invalid {
      @include dx-state($texteditor-invalid-faded-border-color, 1);
    }

    &.dx-state-hover {
      @include dx-state($texteditor-hover-border-color, 1);

      &.dx-invalid {
        @include dx-state($texteditor-invalid-focused-border-color, 1);
      }
    }

    &.dx-dropdowneditor-active.dx-state-focused,
    &.dx-dropdowneditor-active.dx-state-focused.dx-state-hover,
    &.dx-state-focused,
    &.dx-state-focused.dx-state-hover {
      @include dx-state($texteditor-focused-border-color, 2);

      &.dx-invalid {
        @include dx-state($texteditor-invalid-focused-border-color, 2);
      }
    }
  }
}

.dx-editor-underlined {
  &.dx-texteditor-with-label,
  &.dx-texteditor-with-floating-label {
    .dx-texteditor-label {
      transform: translate(0, 0);
      top: $material-texteditor-label-top-offset;
      height: $material-texteditor-label-font-size;
      line-height: $material-texteditor-label-font-size;
      margin-top: 0;
    }

    .dx-texteditor-input,
    .dx-lookup-field,
    .dx-placeholder::before {
      padding-top: $material-standard-texteditor-with-label-input-top-padding;
      padding-bottom: $material-standard-texteditor-with-label-input-bottom-padding;
    }
  }

  &.dx-texteditor-with-floating-label {
    &.dx-texteditor-empty,
    &.dx-texteditor-empty.dx-state-readonly {
      .dx-placeholder {
        display: none;
      }

      .dx-texteditor-label {
        transform: translate(0, 0);
        top: 50%;
        font-size: $material-texteditor-font-size;
        transition: $material-editor-label-transition;
        margin-top: math.div(-$material-texteditor-font-size, 2);
        height: $material-texteditor-font-size;
        line-height: $material-texteditor-font-size;
      }
    }

    &.dx-dropdowneditor-active,
    &.dx-state-focused {
      .dx-placeholder {
        display: block;
      }

      .dx-texteditor-label {
        transform: translate(0, 0);
        top: $material-texteditor-label-top-offset;
        font-size: $material-texteditor-label-font-size;
        height: $material-texteditor-label-font-size;
        line-height: $material-texteditor-label-font-size;
        margin-top: 0;
      }
    }
  }
}

.dx-valid.dx-texteditor {
  .dx-texteditor-input-container {
    &::after {
      @include dx-valid-material-badge();
    }
  }
}

.dx-validation-pending.dx-texteditor {
  .dx-texteditor-input-container {
    .dx-pending-indicator {
      @include dx-pending-indicator-material();
    }
  }
}

@include dx-editor-buttons-container-material(
  $material-underlined-editor-button-height,
  $material-editor-custom-button-margin,
  $material-filled-texteditor-input-button-horizontal-padding,
  $material-filled-texteditor-spin-button-horizontal-padding,
  $material-button-vertical-padding,
);
