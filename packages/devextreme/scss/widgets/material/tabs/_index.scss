@use "sass:color";
@use "../colors" as *;
@use "../sizes" as *;
@use "../button/colors" as *;
@use "../button/mixins" as *;
@use "../../base/icons" as *;
@use "../../base/tabs";
@use "colors" as *;
@use "sizes" as *;

// adduse
@use "../scrollable";
@use "../badge";


@mixin dx-tabs-border-mixin($position, $color) {
  &::before {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    background-color: $color;

    @if $position == bottom {
      top: unset;
      height: 2px;
      width: auto;
    } @else if $position == top {
      bottom: unset;
      height: 2px;
      width: auto;
    } @else if $position == left {
      right: unset;
      width: 2px;
      height: auto;
    } @else if $position == right {
      left: unset;
      width: 2px;
      height: auto;
    }
  }
}

.dx-tab {
  padding: $material-tabs-item-padding;
  min-width: $material-tab-min-width;
  background-color: $tabs-tab-background;
  color: $tabs-tab-color;

  &.dx-state-hover {
    background-color: $tabs-hovered-tab-bg-color;
  }

  &.dx-tab-selected {
    color: $tabs-tab-selected-color;

    @include dx-tabs-border-mixin(bottom, $tabs-selected-tab-border-color);

    &.dx-state-disabled {
      @include dx-tabs-border-mixin(bottom, $tabs-disabled-tab-border-color);
    }

    .dx-icon {
      color: $tabs-tab-icon-selected-color;
    }
  }

  &.dx-state-focused {
    background-color: $tabs-focused-tab-bg-color;
  }


  &.dx-state-disabled {
    color: $tabs-tab-disabled-color;

    .dx-icon {
      color: $tabs-tab-icon-disabled-color;
    }
  }

  &.dx-state-active,
  &.dx-state-active .dx-inkripple-wave {
    background-color: $tabs-active-tab-bg-color;
  }

  .dx-tab-text {
    flex-direction: column;
    text-transform: uppercase;
    line-height: $material-tab-text-line-height;
    font-weight: 500;
  }

  .dx-icon {
    color: $tabs-tab-icon-color;

    @include dx-icon-sizing($material-base-icon-size);
  }
}

.dx-tabs {
  padding: 0;
  background-color: $tabs-tab-background;

  .dx-inkripple {
    overflow: hidden;
  }

  .dx-scrollable {
    flex-basis: 100%;
  }
}

.dx-tabs-nav-button {
  border: none;
  background-color: $tabs-tab-background;
  height: $material-tab-height;
  border-radius: 0;
  box-shadow: none;

  &.dx-button.dx-tabs-nav-button.dx-button-has-icon:not(.dx-button-has-text) {
    @include dx-button-flat-color-styling(
      $base-icon-color,
      $material-tabs-nav-button-background,
      $material-tabs-nav-button-background,
      $material-tabs-nav-button-background,
    );

    border-radius: 0;

    .dx-inkripple-wave {
      background-color: $material-tabs-nav-button-background;
    }
  }

  &.dx-button-has-icon .dx-icon {
    width: $material-tab-nav-button-icon-width;
    height: $material-tab-nav-button-icon-height;
    font-size: $material-tab-nav-button-icon-font-size;
  }
  
  &.dx-state-active {
    border: none;
  }

  &.dx-state-disabled {
    opacity: 1;
    background-color: $tabs-tab-background;

    .dx-button-content {
      opacity: $tabs-tab-button-disabled-opacity;
    }
  }

  .dx-button-content {
    flex: unset;
    padding: $material-tab-nav-button-content-padding;
  }
}

.dx-tabs-vertical {
  .dx-tab-selected {
    @include dx-tabs-border-mixin(left, $tabs-selected-tab-border-color);

    &.dx-state-disabled {
      @include dx-tabs-border-mixin(left, $tabs-disabled-tab-border-color);
    }
  }

  .dx-tab-text {
    flex-direction: row;

    .dx-icon {
      @include dx-icon-margin($material-base-icon-margin-right);
    }
  }

  .dx-tabs-nav-button {
    padding: $material-tab-vertical-nav-button-content-padding;
  }
}
